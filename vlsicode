module FIR(
    input clk,
    input rst,
    input [7:0] x,
    output [15:0] y
    );
    reg [15:0]y;
    reg [7:0] coeff [2:0];
    reg [7:0] shift_reg [2:0];
    initial begin
      coeff[0] = 8'h1; coeff[1] =8'h2; coeff[2] =8'h3;
     end
     always@(posedge clk or posedge rst) begin
        if(rst) begin
           shift_reg[0]<=0;shift_reg[1]<=0;shift_reg[2]<=0;
           y<=0;
         end else begin
            shift_reg[2]<=shift_reg[1];
            shift_reg[1]<=shift_reg[0];
            shift_reg[0]<=x;
            y<=(shift_reg[0]*coeff[0])+(shift_reg[1]*coeff[1])+(shift_reg[2]*coeff[2]);
          end
      end
endmodule

testbench:
module FIR_tb();
        reg clk,rst;
        reg [7:0] x;
        wire [7:0] y;
        FIR uut(.clk(clk),.rst(rst),.x(x),.y(y));
        always #25 clk=~clk;
        initial begin
         #10 clk=0;rst=1;x=8'h1;
         #20 clk=0;rst=0;x=8'h2;
         #30 clk=0;rst=0;x=8'h3;
         #40 clk=0;rst=0;x=8'h4;
        end
endmodule
